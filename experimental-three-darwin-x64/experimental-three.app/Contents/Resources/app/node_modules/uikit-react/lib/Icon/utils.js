'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();

var getDimensionsFromViewBox = exports.getDimensionsFromViewBox = function getDimensionsFromViewBox(svg) {
  var match = svg.match(/view[bB]ox=['"]([\s\S]*?)['"]/m);

  if (!match) return false;

  var _match$1$split = match[1].split(' '),
      _match$1$split2 = _slicedToArray(_match$1$split, 4),
      width = _match$1$split2[2],
      height = _match$1$split2[3];

  return { width: width, height: height };
};

var getInnerSvg = exports.getInnerSvg = function getInnerSvg(svg) {
  return svg.replace(/.*<svg[^>]*>|<\/svg>$/g, '');
};