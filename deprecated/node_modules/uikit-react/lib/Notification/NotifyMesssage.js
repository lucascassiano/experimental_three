'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

var _Icon = require('../Icon');

var _Icon2 = _interopRequireDefault(_Icon);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var NotifyMesssage = function (_Component) {
  _inherits(NotifyMesssage, _Component);

  function NotifyMesssage() {
    var _ref;

    var _temp, _this, _ret;

    _classCallCheck(this, NotifyMesssage);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = NotifyMesssage.__proto__ || Object.getPrototypeOf(NotifyMesssage)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
      isOpen: false
    }, _this.openNotification = function () {
      return _this.setState({ isOpen: true });
    }, _this.handleClose = function () {
      _this.setState({ isOpen: false }, function () {
        _this.leaveTimeout = setTimeout(function () {
          return _this.setState({ isClosed: true });
        }, 300);
      });
    }, _temp), _possibleConstructorReturn(_this, _ret);
  }

  _createClass(NotifyMesssage, [{
    key: 'componentDidMount',
    value: function componentDidMount() {
      this.enterTimeout = setTimeout(this.openNotification, 100);

      if (this.props.timeout && !this.props.isSticky) {
        this.leaveTimeout = setTimeout(this.handleClose, this.props.timeout);
      }
    }
  }, {
    key: 'componentWillUnmount',
    value: function componentWillUnmount() {
      clearTimeout(this.enterTimeout);

      if (this.leaveTimeout) {
        clearTimeout(this.leaveTimeout);
      }
    }
  }, {
    key: 'render',
    value: function render() {
      var _props = this.props,
          children = _props.children,
          type = _props.type,
          icon = _props.icon,
          onClick = _props.onClick;

      var className = (0, _classnames2.default)('uk-notification-message', {
        'uk-notification-message-info': type === 'info',
        'uk-notification-message-success': type === 'success',
        'uk-notification-message-danger': type === 'danger',
        'uk-notification-message-warning': type === 'warning',
        'uk-notification-message-primary': type === 'primary'
      });
      var styles = [{ marginTop: '-64px' }, { marginTop: '0px' }];

      if (this.state.isClosed) {
        return false;
      }

      var body = icon ? React.createElement(
        'div',
        { onClick: onClick },
        React.createElement(_Icon2.default, { icon: icon }),
        '\xA0',
        children
      ) : React.createElement(
        'div',
        { onClick: onClick },
        children
      );

      return React.createElement(
        'div',
        {
          className: className,
          style: _extends({ overflow: 'hidden', transition: 'margin ease-out 300ms' }, styles[this.state.isOpen ? 1 : 0])
        },
        React.createElement(_Icon2.default, { className: 'uk-notification-close uk-close', component: 'a', icon: 'close-icon', onClick: this.handleClose }),
        body
      );
    }
  }]);

  return NotifyMesssage;
}(_react.Component);

NotifyMesssage.propTypes = {
  children: _propTypes2.default.node.isRequired,
  icon: _propTypes2.default.string,
  isSticky: _propTypes2.default.bool,
  timeout: _propTypes2.default.number,
  type: _propTypes2.default.oneOf(['info', 'success', 'danger', 'warning', 'primary', false]),
  onClick: _propTypes2.default.func // eslint-disable-line react/require-default-props
};
NotifyMesssage.defaultProps = {
  icon: '',
  isSticky: false,
  timeout: 3000,
  type: false
};
exports.default = NotifyMesssage;